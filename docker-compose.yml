version: "3.9"
services:
  backend:
    build: ./backend
    container_name: catalog-backend
    network_mode: host
    restart: unless-stopped
    depends_on:
      - mongo
      - kafka
    volumes:
      - ./backend:/app
    environment:
      MONGO_USERNAME: mongo
      MONGO_PASSWORD: mongo
      MONGO_CONNECION_URI: mongodb://localhost/main
      KAFKA_HOST: localhost
      KAFKA_PORT: 9092

  telegrambot:
    build: ./telegrambot
    container_name: catalog-bot
    network_mode: host
    restart: unless-stopped
    depends_on:
      - backend
      - kafka
    volumes:
      - ./telegrambot:/app
    environment:
      BOT_TOKEN: ${BOT_TOKEN}
      KAFKA_HOST: localhost
      KAFKA_PORT: 9092

  nginx:
    image: nginx:alpine
    container_name: catalog-nginx
    network_mode: host
    restart: unless-stopped
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf

  mongo:
    image: mongo
    container_name: catalog-mongo
    network_mode: host
    restart: unless-stopped
    volumes:
      - mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo

  kafka:
    image: bitnami/kafka:latest
    container_name: catalog-kafka
    user: root
    ports:
      - 9092:9092
    volumes:
      - kafka-data:/bitnami/kafka/data
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

volumes:
  mongo-data: null
  kafka-data: null
